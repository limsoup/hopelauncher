<!-- Showing Stats -->
<% if @project.donators.count > 0 %>
	<div class="donators-count">
		<h1><%= @project.donators.count %></h1> donators.
	</div>
<% end %>
<div class="elapsed">
	<h1><%= distance_of_time_in_words(@project.created_at, Time.now)%></h1> since this campaign started. 
</div>
<!-- this is actually the elapsed time, i need to add an end-date to the project -->
<div class="collected">
	<h1>$<%= @project.collected %></h1> of <%= '$'+@project.goal_bad_format.to_s%> raised
</div>

<br><br>
<% if current_user %>
<div id="accordion2">
	    <a class="btn btn-large btn-block" data-toggle="collapse" data-parent="#accordion2" href="#collapseOne" >
	        <span class="fs1" aria-hidden="true" data-icon="î‚£">&nbsp;</span>Donate
	    </a>
	    <div id="collapseOne" class="collapse">
	      <!-- <div class="accordion-innerx"> -->
			<%= form_tag donations_path(@project), :class => "stripe-checkout-box well" do %>
					
					<label class="radio"><input type="radio" name="donation[amount]" id="optionsRadios1" value="10.00">$10</label>

					<label class="radio"><input type="radio" name="donation[amount]" id="optionsRadios2" value="25.00">$25</label>

					<label class="radio"><input type="radio" name="donation[amount]" id="optionsRadios3" value="100.00">$100</label>
				
				
				<label class="radio"><input type="radio" name="donation[amount]" id="optionsRadios4" value="variable"  class="iradio"><input type="currency" id="typedValue" name="custom_amount"></label>
				<!-- <div id="tier_reward">
					<h4 id="tier_reward_donation_amount"></h4><br/>
				</div>  -->
				<div id="reward">
					<h4 id="reward_donation_amount"></h4><br/>
					<span id="tier_choice_label" style="display:none">Reward Choice:</span>
					<select data-hide-disabled="true" id="tier_choice_select" style="display:none"  name="donation[reward_id]">
						<% @project.rewards.collect {|reward| reward.persisted? ? reward : nil }.compact.sort_by {|reward| reward.donation_amount}.each_with_index do |reward,i| %>
							<option value="<%= reward.id %>" <%= @scale ? "selected" : "" %>>Option #<%= i %></option>
						<% end %>
					</select><br/>
					<span id="scale_quantity_label" style="display:none">Quantity :</span><input type="number" value="1" min="0" name="donation[reward_quantity]" id="scale_donation_quantity" style="display:none;">
					<span id="reward_description"></span><br/>
				</div> 
			  <button id="customButton" class="btn btn-success text-center">Donate</button>
			<% end %>
	    </div>
</div>
<br/>
	<% if current_user.followed_projects.exists?(@project.id) %>
		<%= link_to 'Stop Following this Project', destroy_project_following_path(@project, current_user.followings.find_by_project_id(@project.id).id), class:"btn btn-block" %>
	<% else %>
		<%= link_to 'Follow this Project', create_project_following_path(@project), class:"btn btn-block" %>
	<% end %>
<% else %>
     <a class="btn btn-success btn-large btn-block" href="<%= new_user_registration_path %>">Sign Up To Donate</a>
<% end %>


<script src="https://checkout.stripe.com/v2/checkout.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.js"></script>
  <script>
	//get value from form
	function getAmount() {
		if($('input[type=radio]:checked').length == 1) {
			if($('input[type=radio]:checked').val() == 'variable'){
				return parseFloat( $('#typedValue').val().match(/(\d+\.\d+)/)[0]); //should error check this
			} else{
				return parseInt($('input[type=radio]:checked').val());
			}
		}
		alert('should dismiss because no valid value');
	}

    $('#customButton').click(function(){
      var token = function(res){
        var $input = $('<input type=hidden name=stripeToken />').val(res.id);
        $('form').append($input).submit();
      };
			
      StripeCheckout.open({
        key:         "<%= @project.creator.stripe_publishable_key %>", //project owner's publishable key
        amount:      getAmount()*100, // pull from form
        currency:    'usd',
        name:        '<%= @project.title ? @project.title.html_safe : "" %>', //Project Name
        description: "<%= 'A donation to '+@project.title.to_s %> of $"+ getAmount().toFixed(2).toString(), //Donation
        panelLabel:  'Checkout',
        token:       token
      });
      
      return false;
    });
	$(function() {
		var tiers;
		tiers = <%= @project.rewards.collect {|reward| reward.persisted? ? reward : nil }.compact.sort_by {|reward| reward.donation_amount}.to_json.to_s.html_safe %>;
		// $('.selectpicker').selectpicker();
		$('#tier_choice_select').on('change', function(){
			$('#reward_description').text( tiers[this.selectedIndex].description );
			$('#donation_reward_id').attr('value', tiers[this.selectedIndex].id );
		});
		if (tiers !== []){
			$('.stripe-checkout-box input').on('change', function() {
				value = 0;
				console.log(this);
				if($(this).prop("type") == 'radio'){
					if( $(this).prop("value") == "variable" && $(this).prop("checked") == true ) {
						value = parseFloat($(this).next().prop('value').match(/\s*\$\s*([\,\d]+\.\d+)\s*/)[1] );
						console.log(value);
						// if (isNaN(value)){
						// 	value = 0;
						// 	console.log(value);
						// }
					}
					else {
						value = parseFloat($(this).prop("value"));
					}
				}
				else if($(this).attr("type") == "currency"){
					value = parseFloat($(this).prop("value").match(/\s*\$\s*([\,\d]+\.\d+)\s*/)[1]);
					console.log(value);
				}
				else{
					value = -1;
				}
				if(value > -1){
					value *= 100;
					// tiers.sort(function(a,b){
					// 	return a.donation_amount > b.donation_amount;
					// });
					var tier=undefined;
					for(var i = 0; i < tiers.length ; i++ ){
						// console.log(tiers[i]);
						if( tiers[i].donation_amount <= value) {
							tier = tiers[i];
						}
					}
					console.log(tier);
					if(tier === undefined || tier === null){
						$("#reward").hide();
						$('#tier_choice_select').attr('disabled', true);
						$("#scale_donation_quantity").attr('disabled', true);
					}
					else{
						$("#reward").show();
						$("#reward_donation_amount").text("$"+(tier.donation_amount/100).toString());
						$("#reward_description").text(tier.description);
						if(tier.scale == true ) {
							$("#scale_donation_quantity").prop('max', Math.floor(value/tier.donation_amount) );
							$("#scale_donation_quantity").prop('value', Math.floor(value/tier.donation_amount) );
							$("#scale_quantity_label").show();
							$("#scale_donation_quantity").show();

							$("#scale_donation_quantity").attr('disabled', false);
						}
						else{
							selectFlag = false;
							for(var j =  tiers.length -1; j > -1; j-- ){
								if(tiers[j].donation_amount <= value){
									$($("#tier_choice_select option")[j]).attr('disabled', false);
									if(selectFlag == false){
										$($("#tier_choice_select option")[j]).attr('selected', true);
										selectFlag = true;
									}
								}else{
									$($("#tier_choice_select option")[j]).attr('disabled',true);
									$($("#tier_choice_select option")[j]).attr('selected', false);
								}
								//select one
								//set description
								//set input name
							}
							// $("#tier_choice_select").selectpicker('refresh');
							
							
							$("#tier_choice_label").show();
							$("#tier_choice_select").show();
						}
					}
				}
			});
		};
	});
  </script>
<%# end %>